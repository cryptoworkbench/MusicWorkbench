import os; mains_filename = os.path.basename(__file__);
from essentials.user_utilities import *
from essentials.input_methods import get_yes_or_no
from essentials.config import indent, python_indent, keyboard_interrupt_hint
from essentials.initialization import initialize_screen, initialize_data_structures # initialize_data_structures, _collect_piano_notes_for_mode
from essentials.musical_operations import * # list_of_notes, _list_of_intervals
from essentials.LL_node_stuff import * # _LL_node, _extended, _wrap_into_CLL

class interval_pattern(dict):
    def show_titles(self):
        """displays a list containing the titles of all melodies installed."""
        # print(f"Keys: {list(self.keys())}")
        print(f"{empty_indent} Installed melodies:")
        print('\n'.join(f"{empty_indent} - {k}" for k in self.keys()))
    def install(self, key, value):
        """for adding a melody (interval pattern) to the catalogue of melodies at the disposal of the user."""
        self[key] = value

def initialize_melodies() -> None:
    melody_dictionary = interval_pattern({"ode_to_joy": [2, 2, 3, 4, 4, 3, 2, 1, 0, 0, 1, 2, 2, 1, 1]})
    C_IONIAN.apply_scale_degrees(melody_dictionary["ode_to_joy"], REFERENCE_OCTAVE, list(melody_dictionary.keys())[0])
    melody_dictionary.install("frere_jackques", [0, 1, 2, 0, 0, 1, 2, 0, 2, 3, 4, 2, 3, 4, 4, 5, 4, 3, 2, 0, 4, 5, 4, 3, 2, 0, 0, -3, 0, 0, -3, 0])
    C_IONIAN.apply_scale_degrees(melody_dictionary["frere_jackques"], REFERENCE_OCTAVE, list(melody_dictionary.keys())[1])
    return melody_dictionary

def flex_piano():
    piano._loop("vertically", 0.025,  1)
    piano._loop("vertically", 0.025, -1)
def flex_chromatic_scale():
    chromatic_scale._loop("horizontally", 0.05, 1)
    chromatic_scale._loop("horizontally", 0.05, -1)
def flex_interval_scale():
    interval_scale._loop("vertically", 0.05, 1)
    interval_scale._loop("vertically", 0.05, -1)
def flex_c_scales():
    c_ionian._loop("horizontally", 0.05, 1)
    c_ionian._loop("horizontally", 0.05, -1)
    c_dorian._loop("horizontally", 0.05, 1)
    c_dorian._loop("horizontally", 0.05, -1)
    c_phrygian._loop("horizontally", 0.05, 1)
    c_phrygian._loop("horizontally", 0.05, -1)
    c_lydian._loop("horizontally", 0.05, 1)
    c_lydian._loop("horizontally", 0.05, -1)
    c_mixolydian._loop("horizontally", 0.05, 1)
    c_mixolydian._loop("horizontally", 0.05, -1)
    c_aeolian._loop("horizontally", 0.05, 1)
    c_aeolian._loop("horizontally", 0.05, -1)
    c_locrian._loop("horizontally", 0.05, 1)
    c_locrian._loop("horizontally", 0.05, -1)
def flex_c_sharp_scales():
    c_sharp_ionian._loop("horizontally", 0.05, 1)
    c_sharp_ionian._loop("horizontally", 0.05, -1)
    c_sharp_dorian._loop("horizontally", 0.05, 1)
    c_sharp_dorian._loop("horizontally", 0.05, -1)
    c_sharp_phrygian._loop("horizontally", 0.05, 1)
    c_sharp_phrygian._loop("horizontally", 0.05, -1)
    c_sharp_lydian._loop("horizontally", 0.05, 1)
    c_sharp_lydian._loop("horizontally", 0.05, -1)
    c_sharp_mixolydian._loop("horizontally", 0.05, 1)
    c_sharp_mixolydian._loop("horizontally", 0.05, -1)
    c_sharp_aeolian._loop("horizontally", 0.05, 1)
    c_sharp_aeolian._loop("horizontally", 0.05, -1)
    c_sharp_locrian._loop("horizontally", 0.05, 1)
    c_sharp_locrian._loop("horizontally", 0.05, -1)
def flex_d_scales():
    d_ionian._loop("horizontally", 0.05, 1)
    d_ionian._loop("horizontally", 0.05, -1)
    d_dorian._loop("horizontally", 0.05, 1)
    d_dorian._loop("horizontally", 0.05, -1)
    d_phrygian._loop("horizontally", 0.05, 1)
    d_phrygian._loop("horizontally", 0.05, -1)
    d_lydian._loop("horizontally", 0.05, 1)
    d_lydian._loop("horizontally", 0.05, -1)
    d_mixolydian._loop("horizontally", 0.05, 1)
    d_mixolydian._loop("horizontally", 0.05, -1)
    d_aeolian._loop("horizontally", 0.05, 1)
    d_aeolian._loop("horizontally", 0.05, -1)
    d_locrian._loop("horizontally", 0.05, 1)
    d_locrian._loop("horizontally", 0.05, -1)
def flex_d_sharp_scales():
    d_sharp_ionian._loop("horizontally", 0.05, 1)
    d_sharp_ionian._loop("horizontally", 0.05, -1)
    d_sharp_dorian._loop("horizontally", 0.05, 1)
    d_sharp_dorian._loop("horizontally", 0.05, -1)
    d_sharp_phrygian._loop("horizontally", 0.05, 1)
    d_sharp_phrygian._loop("horizontally", 0.05, -1)
    d_sharp_lydian._loop("horizontally", 0.05, 1)
    d_sharp_lydian._loop("horizontally", 0.05, -1)
    d_sharp_mixolydian._loop("horizontally", 0.05, 1)
    d_sharp_mixolydian._loop("horizontally", 0.05, -1)
    d_sharp_aeolian._loop("horizontally", 0.05, 1)
    d_sharp_aeolian._loop("horizontally", 0.05, -1)
    d_sharp_locrian._loop("horizontally", 0.05, 1)
    d_sharp_locrian._loop("horizontally", 0.05, -1)
def flex_e_scales():
    e_ionian._loop("horizontally", 0.05, 1)
    e_ionian._loop("horizontally", 0.05, -1)
    e_dorian._loop("horizontally", 0.05, 1)
    e_dorian._loop("horizontally", 0.05, -1)
    e_phrygian._loop("horizontally", 0.05, 1)
    e_phrygian._loop("horizontally", 0.05, -1)
    e_lydian._loop("horizontally", 0.05, 1)
    e_lydian._loop("horizontally", 0.05, -1)
    e_mixolydian._loop("horizontally", 0.05, 1)
    e_mixolydian._loop("horizontally", 0.05, -1)
    e_aeolian._loop("horizontally", 0.05, 1)
    e_aeolian._loop("horizontally", 0.05, -1)
    e_locrian._loop("horizontally", 0.05, 1)
    e_locrian._loop("horizontally", 0.05, -1)
def flex_f_scales():
    f_ionian._loop("horizontally", 0.05, 1)
    f_ionian._loop("horizontally", 0.05, -1)
    f_dorian._loop("horizontally", 0.05, 1)
    f_dorian._loop("horizontally", 0.05, -1)
    f_phrygian._loop("horizontally", 0.05, 1)
    f_phrygian._loop("horizontally", 0.05, -1)
    f_lydian._loop("horizontally", 0.05, 1)
    f_lydian._loop("horizontally", 0.05, -1)
    f_mixolydian._loop("horizontally", 0.05, 1)
    f_mixolydian._loop("horizontally", 0.05, -1)
    f_aeolian._loop("horizontally", 0.05, 1)
    f_aeolian._loop("horizontally", 0.05, -1)
    f_locrian._loop("horizontally", 0.05, 1)
    f_locrian._loop("horizontally", 0.05, -1)
def flex_f_sharp_scales():
    f_sharp_ionian._loop("horizontally", 0.05, 1)
    f_sharp_ionian._loop("horizontally", 0.05, -1)
    f_sharp_dorian._loop("horizontally", 0.05, 1)
    f_sharp_dorian._loop("horizontally", 0.05, -1)
    f_sharp_phrygian._loop("horizontally", 0.05, 1)
    f_sharp_phrygian._loop("horizontally", 0.05, -1)
    f_sharp_lydian._loop("horizontally", 0.05, 1)
    f_sharp_lydian._loop("horizontally", 0.05, -1)
    f_sharp_mixolydian._loop("horizontally", 0.05, 1)
    f_sharp_mixolydian._loop("horizontally", 0.05, -1)
    f_sharp_aeolian._loop("horizontally", 0.05, 1)
    f_sharp_aeolian._loop("horizontally", 0.05, -1)
    f_sharp_locrian._loop("horizontally", 0.05, 1)
    f_sharp_locrian._loop("horizontally", 0.05, -1)
def flex_g_scales():
    g_ionian._loop("horizontally", 0.05, 1)
    g_ionian._loop("horizontally", 0.05, -1)
    g_dorian._loop("horizontally", 0.05, 1)
    g_dorian._loop("horizontally", 0.05, -1)
    g_phrygian._loop("horizontally", 0.05, 1)
    g_phrygian._loop("horizontally", 0.05, -1)
    g_lydian._loop("horizontally", 0.05, 1)
    g_lydian._loop("horizontally", 0.05, -1)
    g_mixolydian._loop("horizontally", 0.05, 1)
    g_mixolydian._loop("horizontally", 0.05, -1)
    g_aeolian._loop("horizontally", 0.05, 1)
    g_aeolian._loop("horizontally", 0.05, -1)
    g_locrian._loop("horizontally", 0.05, 1)
    g_locrian._loop("horizontally", 0.05, -1)
def flex_g_sharp_scales():
    g_sharp_ionian._loop("horizontally", 0.05, 1)
    g_sharp_ionian._loop("horizontally", 0.05, -1)
    g_sharp_dorian._loop("horizontally", 0.05, 1)
    g_sharp_dorian._loop("horizontally", 0.05, -1)
    g_sharp_phrygian._loop("horizontally", 0.05, 1)
    g_sharp_phrygian._loop("horizontally", 0.05, -1)
    g_sharp_lydian._loop("horizontally", 0.05, 1)
    g_sharp_lydian._loop("horizontally", 0.05, -1)
    g_sharp_mixolydian._loop("horizontally", 0.05, 1)
    g_sharp_mixolydian._loop("horizontally", 0.05, -1)
    g_sharp_aeolian._loop("horizontally", 0.05, 1)
    g_sharp_aeolian._loop("horizontally", 0.05, -1)
    g_sharp_locrian._loop("horizontally", 0.05, 1)
    g_sharp_locrian._loop("horizontally", 0.05, -1)
def flex_a_scales():
    a_ionian._loop("horizontally", 0.05, 1)
    a_ionian._loop("horizontally", 0.05, -1)
    a_dorian._loop("horizontally", 0.05, 1)
    a_dorian._loop("horizontally", 0.05, -1)
    a_phrygian._loop("horizontally", 0.05, 1)
    a_phrygian._loop("horizontally", 0.05, -1)
    a_lydian._loop("horizontally", 0.05, 1)
    a_lydian._loop("horizontally", 0.05, -1)
    a_mixolydian._loop("horizontally", 0.05, 1)
    a_mixolydian._loop("horizontally", 0.05, -1)
    a_aeolian._loop("horizontally", 0.05, 1)
    a_aeolian._loop("horizontally", 0.05, -1)
    a_locrian._loop("horizontally", 0.05, 1)
    a_locrian._loop("horizontally", 0.05, -1)
def flex_a_sharp_scales():
    a_sharp_ionian._loop("horizontally", 0.05, 1)
    a_sharp_ionian._loop("horizontally", 0.05, -1)
    a_sharp_dorian._loop("horizontally", 0.05, 1)
    a_sharp_dorian._loop("horizontally", 0.05, -1)
    a_sharp_phrygian._loop("horizontally", 0.05, 1)
    a_sharp_phrygian._loop("horizontally", 0.05, -1)
    a_sharp_lydian._loop("horizontally", 0.05, 1)
    a_sharp_lydian._loop("horizontally", 0.05, -1)
    a_sharp_mixolydian._loop("horizontally", 0.05, 1)
    a_sharp_mixolydian._loop("horizontally", 0.05, -1)
    a_sharp_aeolian._loop("horizontally", 0.05, 1)
    a_sharp_aeolian._loop("horizontally", 0.05, -1)
    a_sharp_locrian._loop("horizontally", 0.05, 1)
    a_sharp_locrian._loop("horizontally", 0.05, -1)
def flex_b_scales():
    b_ionian._loop("horizontally", 0.05, 1)
    b_ionian._loop("horizontally", 0.05, -1)
    b_dorian._loop("horizontally", 0.05, 1)
    b_dorian._loop("horizontally", 0.05, -1)
    b_phrygian._loop("horizontally", 0.05, 1)
    b_phrygian._loop("horizontally", 0.05, -1)
    b_lydian._loop("horizontally", 0.05, 1)
    b_lydian._loop("horizontally", 0.05, -1)
    b_mixolydian._loop("horizontally", 0.05, 1)
    b_mixolydian._loop("horizontally", 0.05, -1)
    b_aeolian._loop("horizontally", 0.05, 1)
    b_aeolian._loop("horizontally", 0.05, -1)
    b_locrian._loop("horizontally", 0.05, 1)
    b_locrian._loop("horizontally", 0.05, -1)
def flex_all():
    print(f"{empty_indent} WARNING: running 'flex_all()' takes a long time since all 84 different scales will be looped through, in both directions.")
    if not get_yes_or_no(f"{python_indent} Do you want to continue? (yes/no): "): return
    flex_chromatic_scale()
    flex_piano()
    flex_interval_scale()
    flex_c_scales()
    flex_c_sharp_scales()
    flex_d_scales()
    flex_d_sharp_scales()
    flex_e_scales()
    flex_f_scales()
    flex_f_sharp_scales()
    flex_g_scales()
    flex_g_sharp_scales()
    flex_a_scales()
    flex_a_sharp_scales()
    flex_b_scales()

def count_down(counts: int) -> None:
    print(f"\nSTARTING TESTS IN {counts}       ({keyboard_interrupt_hint} to prevent).")
    for x in range(counts - 1, 0, -1):
        time.sleep(1)
        print(f"{x} ...")

    print(f"{indent} tests complete !")

initialize_screen(mains_filename)
initialize_data_structures(globals())
melodies = initialize_melodies()
